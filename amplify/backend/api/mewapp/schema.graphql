type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type Assignment @model @auth(rules: [{allow: private}]) {
  id: ID!
  owner: ID!
  title: String!
  startDate: AWSDateTime!
  endDate: AWSDateTime!
  createdAt: AWSDateTime
  required: Boolean!
  details: String
  artwork: S3Object
}

type Submission @model @key(fields: ["assignmentId", "memberId"]) @auth(rules: [{allow: private}]) {
  id: ID!
  assignmentId: ID!
  memberId: ID!
  owner: ID!
  title: String!
  byline: String!
  details: String
  createdAt: AWSDateTime
  artwork: S3Object
  audio: S3Object!
}

type Member @model @key(name: "memberByEmail", fields: ["email"], queryField: "memberByEmail") @key(name: "membersByStatus", fields: ["status"], queryField: "membersByStatus") @key(name: "membersByRoleAndStatus", fields: ["role", "status"], queryField: "membersByRoleAndStatus") @auth(rules: [{allow: private}]) {
  name: String!
  id: ID!
  email: AWSEmail!
  artistName: String
  status: String!
  createdAt: AWSDateTime
  passes: Int
  submissions: [Submission] @connection(fields: ["id"])
  role: String!
  owner: ID!
}
 