 type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type Assignment @model
  # @key(name: "assignmentsByMember", fields: ["id"], queryField: "assignmentsByMember")
  # @key(name: "byStartDate", fields: ["startDate"], queryField: "byStartDate")
  # @key(name: "byEndDate", fields: ["endDate"], queryField: "byEndDate")
  # @key(name: "byCreatedAt", fields: ["createdAt"], queryField: "byCreatedAt")
     @auth(rules: [
      {allow: owner},
      {allow: groups, groups: ["Editors", "Admins"], mutations: [create, update, delete], queries: null},
      {allow: groups, groups: ["Members"], mutations: null, queries: [get, list]}
    ])
  {
  id: ID!
  owner: ID!
  title: String!
  startDate: String!
  endDate: String!
  createdAt: AWSDateTime
  required: Boolean!
  details: String
  artwork: S3Object
  # members: [Member] @connection(keyName: "membersByAssignment", fields: ["id"])
  # submissions: [Submission] @connection(keyName: "submissionsByAssignment", fields: ["id"])
}


type Submission @model 
    @key(fields: ["assignmentId", "memberId"])
    # @key(name: "submissionsByAssignment", fields: ["assignmentId"])
    # @key(name: "submissionsByMemberId", fields: ["memberId"])
     @auth(rules: [
      {allow: owner},
      {allow: groups, groups: ["Editors", "Admins"], mutations: [create, update, delete], queries: null},
      {allow: groups, groups: ["Members"], mutations: null, queries: [get, list]}
    ])
{
 id: ID!
 assignmentId: ID!
 memberId: ID!
 owner: ID!
 title: String!
 byline: String!
 details: String
 createdAt: AWSDateTime
 artwork: S3Object
 audio: S3Object!
}

type Member @model
  @key(name: "memberByEmail", fields: ["email"], queryField: "memberByEmail")
  @key(name: "membersByStatus", fields: ["status"], queryField: "membersByStatus")
  @key(name: "membersByRoleAndStatus", fields: ["role", "status"], queryField: "membersByRoleAndStatus")
  # @key(name: "membersByAssignment", fields: ["assignments"], queryField: "membersByAssignment")
    @auth(rules: [
      {allow: owner},
      {allow: groups, groups: ["Editors", "Admins"], mutations: [create, update, delete], queries: null},
      {allow: groups, groups: ["Members"], mutations: null, queries: [get, list]}
    ])
  {
  name: String!
  id: ID!
  email: AWSEmail!
  artistName: String
  status: String!
  createdAt: AWSDateTime
  passes: Int
  # assignments: [Assignment] @connection(fields: ["id"])
  submissions: [Submission] @connection(fields: ["id"])
  # submissionsByAssignment: [Submission] @connection(keyName: "byMemberByAssignment", fields: ["id"])
  role: String! # contributors, editors, admins
  owner: ID!
}

